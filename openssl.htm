<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>on OpenSSL - wiki1.mikf.pl</title>
  </head>
  <body>
    <h1>OpenSSL</h1>
    <h2>the recognized way to download host's certificate</h2>
    <p><code>&lt; /dev/null openssl s_client -showcerts [-starttls imap]
        -connect </code><var>address:port</var> <code>2&gt;&amp;1 |<br>
        sed -ne '/-BEGIN CERFIFICATE-/,/-END CERTIFICATE-/p' &gt; </code><var>filename</var><code>.pem</code></p>
    <code></code>
    <p>alternatively, the sed can be</p>
    <p><code><tt>sed -ne '/^Certificate
          chain\r\?$/,/^---\r\?$/{/^-----BEGIN
          CERTIFICATE-----\r\?$/,/^-----END CERTIFICATE-----\r\?$/p}'</tt></code></p>
    <p><code></code>i also had a draft gawk thing that doesn't yet work</p>
    <p><strike><code>gawk --lint -v file=0 -v RS=$'\r\n' -v sta='^-----'
          -v fin=' CERTIFICATE-----$' '$0 ~ (sta "END" fin) { ++file }
          $0 ~ (sta "BEGIN" fin),$0 ~ (sta "END" fin) { print $0
          &gt;&gt; ("folename." file ".pem")}'</code></strike><br>
    </p>
    <h2>setting up quick listening netcat-like</h2>
    <p><i>( </i><i><code>openssl req -x509 -newkey rsa:2048 -keyout
          nc_key.pem -out nc_cert.pem -days 100 -nodes</code></i><i> #
        just generate key )</i><br>
      <code>openssl s_server -accept 1234 -key nc_key.pem -cert
        nc_cert.pem -quiet -naccept +1</code><br>
      <code>openssl s_server -accept 1234 -quiet -naccept +1</code> #
      will want a <code>server.pem</code> in working directory and also
      cert issue<br>
      <code>openssl s_server -accept 1234 -nocert -quiet -naccept +1</code>
      # how do i client anonymous DH though<br>
    </p>
    <h3>quick connecting netcat like</h3>
    <p><code>openssl s_client -connect 192.168.1.180:1234 -quiet
        -no_ign_eof</code><br>
    </p>
  </body>
</html>
